{"version":3,"sources":["pages/myNotes/styled.jsx","pages/myNotes/noteListItem.jsx","pages/myNotes/componentInfo.jsx","constants/noteList.js","pages/myNotes/notes.jsx","hooks/useLocaleStorage.jsx","App.jsx","index.jsx"],"names":["Container","styled","Box","width","maxWidth","background","padding","borderRadius","NotesList","display","alignItems","StyledComponentInfo","marginLeft","StyledListComponent","ListItem","props","borderBottom","cursor","isActive","color","StyledSpan","fontWeight","StyledList","List","EditButton","Button","marginTop","backgroundColor","Backdrop","position","zIndex","right","bottom","top","left","ModalWindow","flexDirection","ChangeDescription","StyledInput","border","NoteListItem","getItemInfo","id","title","description","date","showId","openModal","changePickedItem","formatDescription","length","slice","trim","onClick","onDoubleClick","ComponentInfo","componentInfo","todoList","Date","toDateString","Notes","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","useLocalStorage","todosFromLocalStorage","setTodosFromLocalStorage","todos","setTodos","setComponentInfo","isEditModalOpen","setIsEditModalOpen","changeDescriptionInputValue","setChangeDescriptionInputValue","useEffect","element","closeModal","e","getCurrentItem","find","todo","currentTarget","map","ListItemText","primary","ModalUnstyled","open","onClose","BackdropComponent","type","onChange","target","componentToChange","changedTodoList","submitFormChanges","App","className","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.592cb4b4.chunk.js","sourcesContent":["import { styled } from '@mui/styles';\nimport Box from '@mui/material/Box';\nimport { Button, ListItem } from '@mui/material';\nimport List from '@mui/material/List';\n\nexport const Container = styled(Box)({\n    width: '100%',\n    maxWidth: '500px',\n    background: 'white',\n    padding: '0',\n    borderRadius: '5px',\n});\n\nexport const NotesList = styled('div')({\n    display: 'flex',\n    alignItems: 'start',\n});\n\nexport const StyledComponentInfo = styled('div')({\n    marginLeft: '40px',\n    width: '500px',\n    background: 'white',\n    borderRadius: '5px',\n    padding: '20px',\n});\n\nexport const StyledListComponent = styled(ListItem)((props) => ({\n    borderBottom: '1px solid black',\n    cursor: 'pointer',\n    background: `${props.isActive ? 'slategrey' : 'white'}`,\n    color: `${props.isActive ? 'white' : 'black'}`,\n    '&:hover': {\n        background: 'darkgrey ',\n    },\n    '&:active': {\n        background: 'slategrey ',\n    },\n    '&:last-child': {\n        borderBottom: 'none',\n        borderRadius: '0px 0px 5px 5px',\n    },\n    '&:first-child': {\n        borderRadius: '5px 5px 0px 0px',\n    },\n}));\n\nexport const StyledSpan = styled('span')({\n    fontWeight: 'Bold',\n});\n\nexport const StyledList = styled(List)({\n    padding: '0 !important',\n    borderRadius: '5px',\n});\n\nexport const EditButton = styled(Button)({\n    '&.MuiButton-root': {\n        marginTop: '20px ',\n        backgroundColor: '#7fffd4 ',\n        color: 'black ',\n        fontWeight: 'bold ',\n    },\n});\n\nexport const Backdrop = styled('div')({\n    position: 'fixed',\n    zIndex: '10',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    right: '0',\n    bottom: '0',\n    top: '0',\n    left: '0',\n});\n\nexport const ModalWindow = styled('div')({\n    position: 'absolute',\n    zIndex: '10',\n    top: '40%',\n    left: '40%',\n    padding: '20px',\n    display: 'flex',\n    flexDirection: 'Column',\n    alignItems: 'center',\n    background: 'white',\n    width: '500px',\n});\nexport const ChangeDescription = styled('div')({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: '20px',\n});\n\nexport const StyledInput = styled('input')({\n    width: '300px',\n    padding: '5px',\n    borderRadius: '5px',\n    border: '2px solid grey',\n});\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { StyledSpan, EditButton } from './styled';\n\nconst NoteListItem = ({\n    getItemInfo,\n    id,\n    title,\n    description,\n    date,\n    showId,\n    openModal,\n    changePickedItem,\n}) => {\n    const formatDescription =\n        description.length > 20 ? `${description.slice(0, 20).trim()}...` : `${description}`;\n    return (\n        <div onClick={getItemInfo} id={id} onDoubleClick={changePickedItem}>\n            <h2>{title}</h2>\n            {showId && (\n                <p>\n                    <StyledSpan>Id: </StyledSpan>\n                    {id}\n                </p>\n            )}\n            <p>\n                <StyledSpan>Description: </StyledSpan>\n                {showId ? description : `${formatDescription}`}\n            </p>\n            <p>\n                <StyledSpan>Date: </StyledSpan>\n                {date}\n            </p>\n            {showId && <EditButton onClick={openModal}>Edit</EditButton>}\n        </div>\n    );\n};\n\nNoteListItem.propTypes = {\n    id: PropTypes.number,\n    title: PropTypes.string,\n    description: PropTypes.string,\n    date: PropTypes.string,\n    getItemInfo: PropTypes.func,\n    showId: PropTypes.bool,\n    openModal: PropTypes.func,\n    changePickedItem: PropTypes.func,\n};\n\nexport default NoteListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NoteListItem from './noteListItem';\nimport { StyledComponentInfo } from './styled';\n\nconst ComponentInfo = ({ componentInfo, openModal }) => {\n    const { id, title, description, date } = componentInfo;\n\n    return (\n        <StyledComponentInfo>\n            {id ? (\n                <NoteListItem\n                    id={id}\n                    description={description}\n                    title={title}\n                    date={date}\n                    showId={true}\n                    openModal={openModal}\n                />\n            ) : (\n                <h1>Select note to display</h1>\n            )}\n        </StyledComponentInfo>\n    );\n};\nComponentInfo.propTypes = {\n    componentInfo: PropTypes.object,\n    openModal: PropTypes.func,\n};\n\nexport default ComponentInfo;\n","export const todoList = [\r\n  {\r\n    id: 1,\r\n    title: \"delectus aut autem\",\r\n    description: \"id labore ex et quam laborum\",\r\n    date: new Date(\"3.08.2000\").toDateString(),\r\n  },\r\n  {\r\n    id: 2,\r\n    title: \"quis ut nam facilis et officia qui\",\r\n    description: \"quo vero reiciendis velit similique earum\",\r\n    date: new Date(\"4.09.2010\").toDateString(),\r\n  },\r\n  {\r\n    id: 3,\r\n    title: \"fugiat veniam minus\",\r\n    description: \"odio adipisci rerum aut animi\",\r\n    date: new Date(\"7.07.2008\").toDateString(),\r\n  },\r\n  {\r\n    id: 4,\r\n    title: \"et porro tempora\",\r\n    description: \"alias odio sit\",\r\n    date: new Date(\"3.08.2025\").toDateString(),\r\n  },\r\n  {\r\n    id: 5,\r\n    title: \"laboriosam mollitia et enim quasi\",\r\n    description: \"vero eaque aliquid doloribus et culpa\",\r\n    date: new Date(\"3.03.2012\").toDateString(),\r\n  },\r\n  {\r\n    id: 6,\r\n    title: \"qui ullam ratione quibusdam \",\r\n    description: \"et fugit eligendi deleniti quidem qui sint nihil autem\",\r\n    date: new Date(\"10.08.2007\").toDateString(),\r\n  },\r\n  {\r\n    id: 7,\r\n    title: \"illo expedita consequatur quia in\",\r\n    description:\r\n      \"repellat consequatur praesentium vel minus molestias voluptatum\",\r\n    date: new Date(\"3.12.2008\").toDateString(),\r\n  },\r\n  {\r\n    id: 8,\r\n    title: \"quo adipisci enim quam ut ab\",\r\n    description: \"provident id voluptas\",\r\n    date: new Date(\"2.02.2019\").toDateString(),\r\n  },\r\n];\r\n","import React, { useEffect, useState } from 'react';\n\nimport { ListItemText } from '@mui/material';\nimport { ModalUnstyled } from '@mui/material';\n\nimport ComponentInfo from './componentInfo';\nimport NoteListItem from './noteListItem';\nimport { todoList } from '../../constants/noteList';\nimport { useLocalStorage } from '../../hooks/useLocaleStorage';\nimport {\n    Backdrop,\n    ChangeDescription,\n    StyledInput,\n    Container,\n    EditButton,\n    ModalWindow,\n    NotesList,\n    StyledList,\n    StyledListComponent,\n} from './styled';\n\nconst Notes = () => {\n    const [todosFromLocalStorage, setTodosFromLocalStorage] = useLocalStorage('todoList', todoList);\n\n    const [todos, setTodos] = useState([]);\n    const [componentInfo, setComponentInfo] = useState({});\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n    const [changeDescriptionInputValue, setChangeDescriptionInputValue] = useState('');\n\n    useEffect(() => {\n        setTodos(todosFromLocalStorage);\n    }, []);\n\n    const setDescription = (element) => {\n        setChangeDescriptionInputValue(element.target.value);\n    };\n\n    const submitFormChanges = (componentToChange) => {\n        const changedTodoList = todos.map((todo) => {todo.id === componentToChange.id? {...todo,description: changeDescriptionInputValue}: todo });\n\n        setTodosFromLocalStorage(changedTodoList);\n        closeModal();\n    };\n\n    const changePickedItem = (element) => {\n        getItemInfo(element);\n        openModal();\n    };\n\n    const openModal = () => {\n        setIsEditModalOpen(true);\n    };\n    const closeModal = () => {\n        setIsEditModalOpen(false);\n    };\n\n    const getItemInfo = (e) => {\n        const getCurrentItem = todos.find((todo) => {\n            return todo.id == e.currentTarget.id;\n        });\n        setComponentInfo(getCurrentItem);\n        setChangeDescriptionInputValue(getCurrentItem.description);\n    };\n\n    return (\n        <>\n            <NotesList>\n                <Container>\n                    <StyledList>\n                        {todos.map((todo) => (\n                            <StyledListComponent\n                                isActive={componentInfo?.id === todo.id}\n                                key={todo.id}\n                            >\n                                <ListItemText\n                                    primary={\n                                        <NoteListItem\n                                            id={todo.id}\n                                            title={todo.title}\n                                            showId={false}\n                                            description={todo.description}\n                                            date={todo.date}\n                                            getItemInfo={getItemInfo}\n                                            changePickedItem={changePickedItem}\n                                        />\n                                    }\n                                />\n                            </StyledListComponent>\n                        ))}\n                    </StyledList>\n                </Container>\n                <ComponentInfo componentInfo={componentInfo} openModal={openModal} />\n            </NotesList>\n            {isEditModalOpen && (\n                <ModalUnstyled\n                    open={isEditModalOpen}\n                    onClose={closeModal}\n                    BackdropComponent={Backdrop}\n                >\n                    <ModalWindow>\n                        <h2>Change Item Description</h2>\n                        <ChangeDescription>\n                            <StyledInput\n                                type=\"text\"\n                                onChange={setDescription}\n                                value={changeDescriptionInputValue}\n                            />\n                            <EditButton onClick={submitFormChanges(componentInfo)}>Change</EditButton>\n                        </ChangeDescription>\n                    </ModalWindow>\n                </ModalUnstyled>\n            )}\n        </>\n    );\n};\n\nexport default Notes;\n","import { useState } from 'react';\r\n\r\nexport const useLocalStorage = (key, initialValue) => {\r\n    const [storedValue, setStoredValue] = useState(() => {\r\n        try {\r\n            const item = window.localStorage.getItem(key);\r\n            return item ? JSON.parse(item) : initialValue;\r\n        } catch (error) {\r\n            console.log(error);\r\n            return initialValue;\r\n        }\r\n    });\r\n\r\n    const setValue = (value) => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n};\r\n","import React from 'react';\r\nimport Notes from './pages/myNotes/notes';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className=\"App\">\r\n            <Notes />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './style/normalize.scss';\r\nimport App from './App.jsx';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}