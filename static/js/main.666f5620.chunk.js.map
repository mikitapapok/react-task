{"version":3,"sources":["redux/actions/actionTypes.js","redux/reducers/getUserInfoReducer.js","redux/reducers/todosReducer.js","redux/rootReducer.js","redux/store.js","images/search.svg","pages/myNotes/styled.jsx","images/iconmonstr-share-9.svg","selectors/selectors.js","redux/actions/actionCreators.js","pages/myNotes/noteListItem.jsx","pages/myNotes/componentInfo.jsx","pages/myNotes/sortForm.jsx","constants/validation.js","pages/myNotes/newTodoForm.jsx","pages/myNotes/notes.jsx","pages/header/styled.jsx","pages/header/header.jsx","pages/sharedNotes/SharedNotes.jsx","pages/signIn/styled.jsx","pages/signIn/validInput.jsx","constants/noteList.js","services/userService.js","hooks/mutation/dataServerMutation.js","pages/signIn/signUp.jsx","pages/sharedNotes/styled.jsx","pages/about/styled.jsx","pages/about/About.jsx","pages/notFound/styled.jsx","images/not-found.jpg","pages/notFound/notFound.jsx","hooks/query/loginQuery.js","pages/signIn/SignIn.jsx","App.jsx","index.jsx"],"names":["GET_USER_INFO","LOG_OUT","CHANGE_TODO","SHARE_TODO","ADD_TODO","SET_NEW_TODOS","localStorage","window","initState","user","access","JSON","parse","getItem","storage","todos","id","uuid","title","description","date","Date","toDateString","sharedTodos","rootReducer","combineReducers","userInfo","state","action","type","payload","setItem","currentTodo","find","todo","stringify","condition","store","createStore","applyMiddleware","thunk","Container","styled","Box","width","maxWidth","background","padding","borderRadius","NotesList","marginTop","display","justifyContent","alignItems","StyledComponentInfo","marginLeft","StyledListComponent","ListItem","props","borderBottom","cursor","isActive","color","border","StyledSpan","fontWeight","StyledList","List","EditButton","Button","backgroundColor","Backdrop","position","zIndex","right","bottom","top","left","ModalWindow","flexDirection","ChangeDescription","StyledField","TextField","ShareButton","NoteListContainer","SortFormContainer","NotesContainer","StyledDatePicker","SearchField","SearchButton","StyledTextField","backgroundImage","search","backgroundPosition","backgroundPositionY","backgroundRepeat","outline","NotFoundText","fontSize","textAlign","textTransform","StyledCreateField","StyledFormField","Field","StyledCreateForm","Form","marginRight","CreateTodoText","LoadingButton","height","getAccess","getState","getUserInfo","NoteListItem","getItemInfo","showId","openModal","changePickedItem","todoList","useSelector","dispatch","useDispatch","formatDescription","length","slice","trim","onClick","onDoubleClick","alert","src","shareIcon","alt","ComponentInfo","componentInfo","SortForm","pickDatesToSort","dates","getSearchValue","resetOption","searchInput","value","onChange","LocalizationProvider","dateAdapter","AdapterDateFns","DateRangePicker","startText","endText","newValue","renderInput","startProps","endProps","sx","mx","ValidSchemeForSignUp","Yup","shape","email","required","password","min","firstName","lastName","dateOfBirth","confirmPassword","oneOf","ValidSchemeForLogIn","ValidationSchemeForCreate","initValuesForLogIn","initValuesForSignUp","NewTodoForm","createTodo","initialValues","validationSchema","onSubmit","values","actions","resetForm","errors","as","name","label","error","Notes","storeState","useState","setTodos","dateValue","setDateValue","searchInputValues","setSearchInputValue","setComponentInfo","isEditModalOpen","setIsEditModalOpen","created","setCreated","changeDescriptionInputValue","setChangeDescriptionInputValue","setCurrentTodo","loadingInfiniyScroll","setLoadingInfinityScroll","loadMoreData","setLoadMoreData","getSortList","list","filter","toLowerCase","includes","useEffect","sortedTodo","sortedSharedTodo","submitFormChanges","element","changedTodoList","map","currentElement","closeModal","e","getCurrentItem","currentTarget","setNewTodos","target","addTodo","sort","prevTodo","nextTodo","ListItemText","draggable","onDragOver","preventDefault","onDragStart","onDrop","card","dropHandler","primary","prev","ModalUnstyled","open","onClose","BackdropComponent","StyledHeader","Logo","StyledLink","NavLink","textDecoration","LogOutLink","HeaderList","HeaderListItem","whiteSpace","StyledLogoLink","Link","Header","logAccess","to","SharedNotes","SignForm","paddingLeft","SignUpForm","gridTemplateColumns","gridTemplateRows","columnGap","rowGap","SignInForm","ValidContainer","SignInButton","RegularText","StyledTitle","ValidInput","autoComplete","serverPath","fetchUsers","axios","get","useMutationDataServer","useMutation","dataToPost","post","SignUp","mutation","submitForm","a","mutate","PageTitle","SharedBox","About","className","ErrorBox","Title","ErrorText","ErrorBack","flexShrink","NotFound","notFound","FETCH_USERS_DATA","SignIn","userCredentials","setUserCredentials","config","useQuery","response","data","cacheTime","refetchOnWindowFocus","refetchOnMount","useUsers","enabled","users","currentUser","dataElement","singInHandler","App","location","useLocation","navigate","useNavigate","hasAccess","setHasAccess","subscribe","pathname","path","queryClient","QueryClient","ReactDOM","render","client","document","getElementById"],"mappings":"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","file":"static/js/main.666f5620.chunk.js","sourcesContent":["export const GET_USER_INFO = 'GET_USER_INFO';\r\nexport const LOG_OUT = 'LOG_OUT';\r\nexport const CHANGE_TODO = 'CHANGE_TODO';\r\nexport const SHARE_TODO = 'SHARE_TODO';\r\nexport const ADD_TODO = 'ADD_TODO';\r\nexport const SET_NEW_TODOS = 'SET_NEW_TODOS';\r\n","import { GET_USER_INFO, LOG_OUT } from '../actions/actionTypes';\r\n\r\nconst localStorage = window.localStorage;\r\nconst initState = {\r\n    user: {},\r\n    access: JSON.parse(localStorage.getItem('access')) || false,\r\n};\r\n\r\nexport const getUserInfoReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case GET_USER_INFO:\r\n            state.user = action.payload;\r\n            if (action.payload) {\r\n                state.access = true;\r\n                localStorage.setItem('access', true);\r\n            }\r\n            break;\r\n        case LOG_OUT:\r\n            state.access = false;\r\n            localStorage.setItem('access', false);\r\n            break;\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n};\r\n","import { v4 as uuid } from 'uuid';\r\nimport { ADD_TODO, CHANGE_TODO, SHARE_TODO, SET_NEW_TODOS } from '../actions/actionTypes';\r\n\r\nconst storage = window.localStorage;\r\nconst initState = JSON.parse(storage.getItem('todoList')) || {\r\n    todos: [\r\n        {\r\n            id: uuid(),\r\n            title: 'React router 1',\r\n            description: 'buy fish',\r\n            date: new Date('2.02.2019').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'React router 2',\r\n            description: 'pbuy meet',\r\n            date: new Date('2.02.2019').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'React router 3',\r\n            description: 'buy milk',\r\n            date: new Date('2.02.2019').toDateString(),\r\n        },\r\n    ],\r\n    sharedTodos: [\r\n        {\r\n            id: uuid(),\r\n            title: 'delectus aut autem',\r\n            description: 'id labore ex et quam laborum',\r\n            date: new Date('3.08.2000').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'quis ut nam facilis et officia qui',\r\n            description: 'quo vero reiciendis velit similique earum',\r\n            date: new Date('4.09.2010').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'fugiat veniam minus',\r\n            description: 'odio adipisci rerum aut animi',\r\n            date: new Date('7.07.2008').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'et porro tempora',\r\n            description: 'alias odio sit',\r\n            date: new Date('3.08.2025').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'laboriosam mollitia et enim quasi',\r\n            description: 'vero eaque aliquid doloribus et culpa',\r\n            date: new Date('3.03.2012').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'qui ullam ratione quibusdam ',\r\n            description: 'et fugit eligendi deleniti quidem qui sint nihil autem',\r\n            date: new Date('10.08.2007').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'illo expedita consequatur quia in',\r\n            description: 'repellat consequatur praesentium vel minus molestias voluptatum',\r\n            date: new Date('3.12.2008').toDateString(),\r\n        },\r\n        {\r\n            id: uuid(),\r\n            title: 'quo adipisci enim quam ut ab',\r\n            description: 'provident id voluptas',\r\n            date: new Date('2.02.2019').toDateString(),\r\n        },\r\n    ],\r\n};\r\nexport const todoReducer = (state = initState, action) => {\r\n    let currentTodo;\r\n    switch (action.type) {\r\n        case CHANGE_TODO:\r\n            currentTodo = state.todos.find((todo) => todo.id == action.payload.id);\r\n            if (!currentTodo) {\r\n                currentTodo = state.sharedTodos.find((todo) => todo.id == action.payload.id);\r\n            }\r\n            currentTodo.description = action.payload.description;\r\n            storage.setItem('todoList', JSON.stringify(state));\r\n            break;\r\n        case SHARE_TODO:\r\n            currentTodo = state.sharedTodos.find((todo) => todo.id === action.payload.id);\r\n            if (!currentTodo) {\r\n                state.sharedTodos = [...state.sharedTodos, action.payload];\r\n                storage.setItem('todoList', JSON.stringify(state));\r\n            }\r\n            storage.setItem('todoList', JSON.stringify(state));\r\n            break;\r\n        case ADD_TODO:\r\n            currentTodo = {\r\n                title: action.payload.title,\r\n                description: action.payload.description,\r\n                date: new Date().toDateString(),\r\n                id: uuid(),\r\n            };\r\n            state.todos = [...state.todos, currentTodo];\r\n            storage.setItem('todoList', JSON.stringify(state));\r\n            break;\r\n        case SET_NEW_TODOS:\r\n            if (!action.payload.condition) {\r\n                state.todos = action.payload.todos;\r\n            }\r\n            if (action.payload.condition) {\r\n                state.sharedTodos = action.payload.todos;\r\n            }\r\n            storage.setItem('todoList', JSON.stringify(state));\r\n            break;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n    return state;\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { getUserInfoReducer } from './reducers/getUserInfoReducer';\r\nimport { todoReducer } from './reducers/todosReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n    userInfo: getUserInfoReducer,\r\n    todos: todoReducer\r\n});\r\n","import { applyMiddleware, createStore } from 'redux';\r\nimport { rootReducer } from './rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n","export default __webpack_public_path__ + \"static/media/search.b6b33df1.svg\";","import { styled } from '@mui/styles';\r\nimport Box from '@mui/material/Box';\r\nimport { Button, ListItem } from '@mui/material';\r\nimport List from '@mui/material/List';\r\nimport { TextField } from '@mui/material';\r\nimport search from '../../images/search.svg';\r\nimport { Field, Form } from 'formik';\r\nexport const Container = styled(Box)({\r\n    width: '100%',\r\n    maxWidth: '500px',\r\n    background: 'white',\r\n    padding: '0',\r\n    borderRadius: '5px',\r\n});\r\n\r\nexport const NotesList = styled('div')({\r\n    marginTop: '30px',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'start',\r\n});\r\n\r\nexport const StyledComponentInfo = styled('div')({\r\n    marginLeft: '40px',\r\n    width: '500px',\r\n    background: 'white',\r\n    borderRadius: '5px',\r\n    padding: '20px',\r\n});\r\n\r\nexport const StyledListComponent = styled(ListItem)((props) => ({\r\n    borderBottom: '1px solid black',\r\n    cursor: 'pointer',\r\n    background: `${props.isActive ? 'slategrey' : 'white'}`,\r\n    color: `${props.isActive ? 'white' : 'black'}`,\r\n\r\n    '&:hover': {\r\n        background: 'antiquewhite',\r\n        border: 'none',\r\n    },\r\n    '&:active': {\r\n        background: 'slategrey ',\r\n    },\r\n    '&:last-child': {\r\n        borderBottom: 'none',\r\n        borderRadius: '0px 0px 5px 5px',\r\n    },\r\n    '&:first-child': {\r\n        borderRadius: '5px 5px 0px 0px',\r\n    },\r\n}));\r\n\r\nexport const StyledSpan = styled('span')({\r\n    fontWeight: 'Bold',\r\n});\r\n\r\nexport const StyledList = styled(List)({\r\n    padding: '0 !important',\r\n    borderRadius: '5px',\r\n});\r\n\r\nexport const EditButton = styled(Button)({\r\n    '&.MuiButton-root': {\r\n        marginTop: '20px ',\r\n        backgroundColor: '#7fffd4 ',\r\n        color: 'black ',\r\n        fontWeight: 'bold ',\r\n    },\r\n});\r\n\r\nexport const Backdrop = styled('div')({\r\n    position: 'fixed',\r\n    zIndex: '10',\r\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\r\n    right: '0',\r\n    bottom: '0',\r\n    top: '0',\r\n    left: '0',\r\n});\r\n\r\nexport const ModalWindow = styled('div')({\r\n    position: 'absolute',\r\n    zIndex: '10',\r\n    top: '40%',\r\n    left: '40%',\r\n    padding: '20px',\r\n    display: 'flex',\r\n    flexDirection: 'Column',\r\n    alignItems: 'center',\r\n    background: 'white',\r\n    width: '500px',\r\n});\r\nexport const ChangeDescription = styled('div')({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '20px',\r\n});\r\n\r\nexport const StyledField = styled(TextField)({\r\n    padding: '5px',\r\n    width: '100%',\r\n    borderRadius: '5px',\r\n    border: '1px solid grey',\r\n    marginTop: '5px',\r\n});\r\nexport const ShareButton = styled(Button)({\r\n    '&.MuiButton-root': {\r\n        backgroundColor: 'none',\r\n        width: '20px',\r\n        marginLeft: 'auto',\r\n    },\r\n});\r\nexport const NoteListContainer = styled('div')({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n});\r\n\r\nexport const SortFormContainer = styled('div')({\r\n    background: 'white',\r\n    padding: '20px',\r\n    marginTop: '10px',\r\n    borderRadius: '5px',\r\n});\r\n\r\nexport const NotesContainer = styled('div')({\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const StyledDatePicker = styled('div')({\r\n    marginTop: ' 40px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const SearchField = styled('div')({\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const SearchButton = styled(Button)({\r\n    '&.MuiButton-root': {\r\n        backgroundColor: 'cornflowerblue',\r\n        color: 'white',\r\n        marginTop: '20px',\r\n    },\r\n});\r\nexport const StyledTextField = styled('input')({\r\n    width: '400px',\r\n    '&&': {\r\n        padding: '10px 10px 10px 30px',\r\n        border: 'none',\r\n        backgroundImage: `url(${search})`,\r\n        backgroundPosition: 'start',\r\n        backgroundPositionY: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        borderBottom: '1px solid grey',\r\n        outline: '0',\r\n    },\r\n});\r\nexport const NotFoundText = styled('h3')({\r\n    fontSize: '60px',\r\n    textAlign: 'center',\r\n    textTransform: 'uppercase',\r\n});\r\nexport const StyledCreateField = styled(TextField)({\r\n    width: '300px',\r\n    borderRadius: '5px',\r\n    border: '1px solid grey',\r\n    marginTop: '15px',\r\n});\r\nexport const StyledFormField = styled(Field)({\r\n    '&&': { marginTop: '20px' },\r\n});\r\nexport const StyledCreateForm = styled(Form)({\r\n    background: 'white',\r\n    marginRight: '20px',\r\n    padding: '20px',\r\n    borderRadius: '5px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'start',\r\n});\r\n\r\nexport const CreateTodoText = styled('h3')({\r\n    fontSize: '30px',\r\n    textTransform: 'uppercase',\r\n});\r\n\r\nexport const LoadingButton = styled(SearchButton)({\r\n    width: '100%',\r\n    height: '100%',\r\n    '&.MuiButton-root': {\r\n        marginTop: '0',\r\n        borderRadius: '0 0 5px 5px',\r\n    },\r\n});\r\n","export default __webpack_public_path__ + \"static/media/iconmonstr-share-9.73cb4430.svg\";","import { store } from '../redux/store';\r\n\r\nexport const getAccess = () => store.getState().userInfo.access;\r\nexport const getTodos = () => store.getState().todos;\r\nexport const getState = (state) => state.todos;\r\n","import {\r\n    ADD_TODO,\r\n    CHANGE_TODO,\r\n    GET_USER_INFO,\r\n    LOG_OUT,\r\n    SET_NEW_TODOS,\r\n    SHARE_TODO,\r\n} from './actionTypes';\r\n\r\nexport const getUserInfo = (userInfo) => {\r\n    return { type: GET_USER_INFO, payload: userInfo };\r\n};\r\nexport const logOut = () => {\r\n    return { type: LOG_OUT };\r\n};\r\n\r\nexport const changeTodo = (todo) => {\r\n    return { type: CHANGE_TODO, payload: todo };\r\n};\r\n\r\nexport const shareTodo = (todo) => {\r\n    return { type: SHARE_TODO, payload: todo };\r\n};\r\n\r\nexport const addTodo = (todo) => {\r\n    return { type: ADD_TODO, payload: todo };\r\n};\r\n\r\nexport const setNewTodos = (todos) => {\r\n    return { type: SET_NEW_TODOS, payload: todos };\r\n};\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { StyledSpan, EditButton, ShareButton, NoteListContainer } from './styled';\r\nimport shareIcon from '../../images/iconmonstr-share-9.svg';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getState } from '../../selectors/selectors';\r\nimport { shareTodo } from '../../redux/actions/actionCreators';\r\nconst NoteListItem = ({\r\n    getItemInfo,\r\n    id,\r\n    title,\r\n    description,\r\n    date,\r\n    showId,\r\n    openModal,\r\n    changePickedItem,\r\n    condition,\r\n}) => {\r\n    const todoList = useSelector(getState).todos;\r\n    const dispatch = useDispatch();\r\n    const submitTodo = () => {\r\n        const currentTodo = todoList.find((todo) => todo.id === id);\r\n        dispatch(shareTodo(currentTodo));\r\n        alert('Todo is shared');\r\n    };\r\n    const formatDescription =\r\n        description.length > 20 ? `${description.slice(0, 20).trim()}...` : `${description}`;\r\n\r\n    return (\r\n        <NoteListContainer onClick={getItemInfo} id={id} onDoubleClick={changePickedItem} data-container='1'>\r\n            <h2>{title}</h2>\r\n            {showId && (\r\n                <p>\r\n                    <StyledSpan>Id: </StyledSpan>\r\n                    {id.slice(0, 2)}\r\n                </p>\r\n            )}\r\n            <p>\r\n                <StyledSpan>Description: </StyledSpan>\r\n                {showId ? description : `${formatDescription}`}\r\n            </p>\r\n            <p>\r\n                <StyledSpan>Date: </StyledSpan>\r\n                {date}\r\n            </p>\r\n            {showId && <EditButton onClick={openModal}>Edit</EditButton>}\r\n            {!condition && !showId && (\r\n                <ShareButton onClick={submitTodo}>\r\n                    <img src={shareIcon} alt=\"\" />\r\n                </ShareButton>\r\n            )}\r\n        </NoteListContainer>\r\n    );\r\n};\r\n\r\nNoteListItem.propTypes = {\r\n    id: PropTypes.string,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n    date: PropTypes.string,\r\n    getItemInfo: PropTypes.func,\r\n    showId: PropTypes.bool,\r\n    openModal: PropTypes.func,\r\n    changePickedItem: PropTypes.func,\r\n    condition: PropTypes.bool,\r\n};\r\n\r\nexport default NoteListItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport NoteListItem from './noteListItem';\r\nimport { StyledComponentInfo } from './styled';\r\n\r\nconst ComponentInfo = ({ componentInfo, openModal}) => {\r\n    const { id, title, description, date } = componentInfo;\r\n\r\n    return (\r\n        <StyledComponentInfo>\r\n            {id ? (\r\n                <NoteListItem\r\n                    id={id}\r\n                    description={description}\r\n                    title={title}\r\n                    date={date}\r\n                    showId={true}\r\n                    openModal={openModal}\r\n                    data-component='1'\r\n                />\r\n            ) : (\r\n                <h1>Select note to display</h1>\r\n            )}\r\n        </StyledComponentInfo>\r\n    );\r\n};\r\nComponentInfo.propTypes = {\r\n    componentInfo: PropTypes.object,\r\n    openModal: PropTypes.func,\r\n};\r\n\r\nexport default ComponentInfo;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport TextField from '@mui/material/TextField';\r\nimport DateRangePicker from '@mui/lab/DateRangePicker';\r\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\r\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport {\r\n    SearchButton,\r\n    SearchField,\r\n    SortFormContainer,\r\n    StyledDatePicker,\r\n    StyledTextField,\r\n} from './styled';\r\n\r\nconst SortForm = ({ pickDatesToSort, dates, getSearchValue, resetOption, searchInput }) => {\r\n    return (\r\n        <>\r\n            <SortFormContainer>\r\n                <SearchField>\r\n                    <StyledTextField value={searchInput} onChange={getSearchValue} />\r\n                </SearchField>\r\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n                    <DateRangePicker\r\n                        startText=\"Check-in\"\r\n                        endText=\"Check-out\"\r\n                        value={dates}\r\n                        onChange={(newValue) => {\r\n                            pickDatesToSort(newValue);\r\n                        }}\r\n                        renderInput={(startProps, endProps) => (\r\n                            <StyledDatePicker>\r\n                                <TextField {...startProps} />\r\n                                <Box sx={{ mx: 2 }}> to </Box>\r\n                                <TextField {...endProps} />\r\n                            </StyledDatePicker>\r\n                        )}\r\n                    />\r\n                </LocalizationProvider>\r\n                <SearchButton onClick={resetOption}>reset options</SearchButton>\r\n            </SortFormContainer>\r\n        </>\r\n    );\r\n};\r\n\r\nSortForm.propTypes = {\r\n    pickDatesToSort: PropTypes.func,\r\n    dates: PropTypes.array,\r\n    searchInput: PropTypes.string,\r\n    getSearchValue: PropTypes.func,\r\n    resetOption: PropTypes.func,\r\n};\r\n\r\nexport default SortForm;\r\n","import * as Yup from 'yup';\r\n\r\nexport const ValidSchemeForSignUp = Yup.object().shape({\r\n    email: Yup.string().email('Use @ and . for adding email').required('Enter Email'),\r\n    password: Yup.string()\r\n        .min(3, 'Password must contain at least 3 symblos')\r\n        .required('Enter password'),\r\n    firstName: Yup.string().required('Enter your name'),\r\n    lastName: Yup.string().required('Enter your last name'),\r\n    dateOfBirth: Yup.string(),\r\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match '),\r\n});\r\n\r\nexport const ValidSchemeForLogIn = Yup.object().shape({\r\n    email: Yup.string().email('Please use @ and . for adding email').required('Enter Email'),\r\n    password: Yup.string().min(3, 'Enter more than 3 symblos').required('Enter password'),\r\n});\r\nexport const ValidationSchemeForCreate = Yup.object().shape({\r\n    title: Yup.string().required('Enter title'),\r\n    description: Yup.string().required('Enter description'),\r\n});\r\nexport const initValuesForLogIn = {\r\n    email: '',\r\n    password: '',\r\n};\r\n\r\nexport const initValuesForSignUp = {\r\n    email: '',\r\n    password: '',\r\n    lastName: '',\r\n    firstName: '',\r\n    dateOfBirth: '',\r\n    confirmPassword: '',\r\n};\r\nexport const sortValidation = (payload) => {\r\n    return {\r\n        search: payload,\r\n    };\r\n};\r\n","import React from 'react';\r\nimport { Formik } from 'formik';\r\n\r\nimport {\r\n    CreateTodoText,\r\n    SearchButton,\r\n    StyledCreateField,\r\n    StyledCreateForm,\r\n    StyledFormField,\r\n} from './styled';\r\nimport { ValidationSchemeForCreate } from '../../constants/validation';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NewTodoForm = ({ createTodo }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                title: '',\r\n                description: '',\r\n            }}\r\n            validationSchema={ValidationSchemeForCreate}\r\n            onSubmit={(values, actions) => {\r\n                createTodo(values);\r\n                alert('New todo created');\r\n                actions.resetForm();\r\n            }}\r\n            data-form=\"1\"\r\n        >\r\n            {({ errors }) => (\r\n                <StyledCreateForm>\r\n                    <CreateTodoText>create new todo</CreateTodoText>\r\n                    <StyledFormField\r\n                        as={StyledCreateField}\r\n                        name=\"title\"\r\n                        label={errors.description || 'Enter title'}\r\n                        error={!!errors.title}\r\n                        data-description='1'\r\n                    />\r\n                    <StyledFormField\r\n                        as={StyledCreateField}\r\n                        name=\"description\"\r\n                        label={errors.description || 'Enter description'}\r\n                        error={!!errors.description}\r\n                    />\r\n                    <SearchButton type=\"submit\" data-button=\"1\">\r\n                        create\r\n                    </SearchButton>\r\n                </StyledCreateForm>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\nNewTodoForm.propTypes = {\r\n    createTodo: PropTypes.func,\r\n};\r\nexport default NewTodoForm;\r\n","import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { ListItemText } from '@mui/material';\r\nimport { ModalUnstyled } from '@mui/material';\r\n\r\nimport ComponentInfo from './componentInfo';\r\nimport NoteListItem from './noteListItem';\r\nimport {\r\n    Backdrop,\r\n    ChangeDescription,\r\n    Container,\r\n    EditButton,\r\n    ModalWindow,\r\n    NotesList,\r\n    StyledList,\r\n    StyledListComponent,\r\n    StyledField,\r\n    NotesContainer,\r\n    NotFoundText,\r\n    LoadingButton,\r\n} from './styled';\r\n\r\nimport { addTodo, changeTodo, setNewTodos } from '../../redux/actions/actionCreators';\r\nimport { getState, getTodos } from '../../selectors/selectors';\r\nimport SortForm from './sortForm';\r\nimport NewTodoForm from './newTodoForm';\r\n\r\nconst Notes = ({ condition }) => {\r\n    const storeState = getTodos();\r\n    const todoList = useSelector(getState).todos;\r\n    const sharedTodos = useSelector(getState).sharedTodos;\r\n    const dispatch = useDispatch();\r\n\r\n    const [todos, setTodos] = useState([]);\r\n    const [dateValue, setDateValue] = useState([new Date('2000'), new Date('2030')]);\r\n    const [searchInputValues, setSearchInputValue] = useState('');\r\n    const [componentInfo, setComponentInfo] = useState({});\r\n    const [isEditModalOpen, setIsEditModalOpen] = useState(false);\r\n    const [created, setCreated] = useState(false);\r\n    const [changeDescriptionInputValue, setChangeDescriptionInputValue] = useState('');\r\n    const [currentTodo, setCurrentTodo] = useState(null);\r\n    const [loadingInfiniyScroll, setLoadingInfinityScroll] = useState(true);\r\n    const [loadMoreData, setLoadMoreData] = useState(2);\r\n\r\n    const dragStartTodo = (card) => {\r\n        setCurrentTodo(card);\r\n    };\r\n    const dropHandler = (e, card) => {\r\n        e.preventDefault();\r\n        setTodos(\r\n            todos.map((element) => {\r\n                if (element.id === card.id) {\r\n                    return { ...element, id: currentTodo.id };\r\n                }\r\n                if (element.id === currentTodo.id) {\r\n                    return { ...element, id: card.id };\r\n                }\r\n\r\n                return element;\r\n            })\r\n        );\r\n    };\r\n\r\n    const getSortList = (list) => {\r\n        return list.filter((todo) =>\r\n            dateValue[1]\r\n                ? new Date(todo.date) >= dateValue[0] &&\r\n                  new Date(todo.date) <= dateValue[1] &&\r\n                  todo.title.toLowerCase().includes(searchInputValues.toLowerCase())\r\n                : new Date(todo.date) >= dateValue[0] &&\r\n                  todo.title.toLowerCase().includes(searchInputValues.toLowerCase())\r\n        );\r\n    };\r\n\r\n    const loadDataOnScroll = () => {\r\n        setLoadMoreData((prev) => prev + 3);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const sortedTodo = getSortList(todoList);\r\n        const sortedSharedTodo = getSortList(sharedTodos);\r\n\r\n        setTodos(!condition ? sortedTodo : sortedSharedTodo);\r\n        if (!condition && loadMoreData >= todoList.length) {\r\n            setLoadingInfinityScroll(false);\r\n        }\r\n        if (condition && loadMoreData >= sharedTodos.length) {\r\n            setLoadingInfinityScroll(false);\r\n        }\r\n    }, [storeState, dateValue, searchInputValues, created, loadMoreData]);\r\n\r\n    const setDescription = (element) => {\r\n        setChangeDescriptionInputValue(element.target.value);\r\n    };\r\n\r\n    const pickDatesToSort = (payload) => {\r\n        setDateValue(payload);\r\n    };\r\n\r\n    const resetOption = () => {\r\n        setSearchInputValue('');\r\n        setDateValue([new Date('2000'), new Date('2030')]);\r\n    };\r\n\r\n    const getSearchValue = (e) => {\r\n        setSearchInputValue(e.target.value);\r\n    };\r\n\r\n    const createTodo = (todo) => {\r\n        dispatch(addTodo(todo));\r\n        setCreated(!created);\r\n    };\r\n\r\n    const submitFormChanges = (element) => {\r\n        const changedTodoList = todos.map((todo) => {\r\n            return todo.id === element.id\r\n                ? { ...todo, description: changeDescriptionInputValue }\r\n                : todo;\r\n        });\r\n\r\n        const currentElement = changedTodoList.find((todo) => todo.id === element.id);\r\n\r\n        setComponentInfo(currentElement);\r\n        dispatch(changeTodo(currentElement));\r\n        closeModal();\r\n    };\r\n\r\n    const changePickedItem = (element) => {\r\n        getItemInfo(element);\r\n        openModal();\r\n    };\r\n\r\n    const openModal = () => {\r\n        setIsEditModalOpen(true);\r\n    };\r\n    const closeModal = () => {\r\n        setIsEditModalOpen(false);\r\n    };\r\n\r\n    const getItemInfo = (e) => {\r\n        const getCurrentItem = todos.find((todo) => {\r\n            return todo.id == e.currentTarget.id;\r\n        });\r\n        setComponentInfo(getCurrentItem);\r\n        dispatch(setNewTodos({ todos: todos, condition: condition }));\r\n        setChangeDescriptionInputValue(getCurrentItem.description);\r\n    };\r\n    const sortTodos = (prevTodo, nextTodo) => {\r\n        if (prevTodo.id > nextTodo.id) {\r\n            return 1;\r\n        } else {\r\n            return -1;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <NotesContainer>\r\n            <SortForm\r\n                resetOption={resetOption}\r\n                dates={dateValue}\r\n                pickDatesToSort={pickDatesToSort}\r\n                searchInput={searchInputValues}\r\n                getSearchValue={getSearchValue}\r\n            />\r\n            <NotesList>\r\n                {!condition && <NewTodoForm createTodo={createTodo} />}\r\n                <Container>\r\n                    <StyledList>\r\n                        {todos.length ? (\r\n                            todos\r\n                                .sort(sortTodos)\r\n                                .slice(0, loadMoreData)\r\n                                .map((todo) => (\r\n                                    <StyledListComponent\r\n                                        isActive={componentInfo?.id === todo.id}\r\n                                        key={todo.id}\r\n                                    >\r\n                                        <ListItemText\r\n                                            draggable={true}\r\n                                            key={todo.id}\r\n                                            onDragOver={(e) => e.preventDefault()}\r\n                                            onDragStart={() => dragStartTodo(todo)}\r\n                                            onDrop={(e) => dropHandler(e, todo)}\r\n                                            primary={\r\n                                                <NoteListItem\r\n                                                    id={todo.id}\r\n                                                    title={todo.title}\r\n                                                    showId={false}\r\n                                                    description={todo.description}\r\n                                                    date={todo.date}\r\n                                                    getItemInfo={getItemInfo}\r\n                                                    changePickedItem={changePickedItem}\r\n                                                    condition={condition}\r\n                                                />\r\n                                            }\r\n                                        />\r\n                                    </StyledListComponent>\r\n                                ))\r\n                        ) : (\r\n                            <NotFoundText>nothing found</NotFoundText>\r\n                        )}\r\n                        {loadingInfiniyScroll && (\r\n                            <LoadingButton onClick={loadDataOnScroll}>load more data</LoadingButton>\r\n                        )}\r\n                    </StyledList>\r\n                </Container>\r\n                <ComponentInfo componentInfo={componentInfo} openModal={openModal} />\r\n            </NotesList>\r\n            {isEditModalOpen && (\r\n                <ModalUnstyled\r\n                    open={isEditModalOpen}\r\n                    onClose={closeModal}\r\n                    BackdropComponent={Backdrop}\r\n                >\r\n                    <ModalWindow>\r\n                        <h2>Change Item Description</h2>\r\n                        <ChangeDescription>\r\n                            <StyledField\r\n                                type=\"text\"\r\n                                onChange={setDescription}\r\n                                value={changeDescriptionInputValue}\r\n                                label=\"change value\"\r\n                            />\r\n                            <EditButton onClick={() => submitFormChanges(componentInfo)}>\r\n                                Change\r\n                            </EditButton>\r\n                        </ChangeDescription>\r\n                    </ModalWindow>\r\n                </ModalUnstyled>\r\n            )}\r\n        </NotesContainer>\r\n    );\r\n};\r\nNotes.propTypes = {\r\n    condition: PropTypes.bool,\r\n};\r\nexport default Notes;\r\n","import { styled } from '@mui/styles';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { List, ListItemText } from '@mui/material';\r\n\r\nexport const StyledHeader = styled('header')({\r\n    width: '100%',\r\n    padding: '10px 50px 10px 40px',\r\n    backgroundColor: 'cornflowerblue',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const Logo = styled('h1')({\r\n    color: 'white',\r\n    cursor: 'pointer',\r\n    '&:hover': {\r\n        color: 'pink',\r\n    },\r\n});\r\n\r\nexport const StyledLink = styled(NavLink)({\r\n    textTransform: 'uppercase',\r\n    textDecoration: 'none',\r\n    fontSize: '24px',\r\n    color: 'white',\r\n    '&.active': {\r\n        color: 'deeppink',\r\n    },\r\n});\r\n\r\nexport const LogOutLink = styled(StyledLink)({\r\n    marginLeft: 'auto',\r\n});\r\n\r\nexport const HeaderList = styled(List)({\r\n    '&.MuiList-root': {\r\n        display: 'flex',\r\n        marginLeft: '25vw',\r\n    },\r\n});\r\n\r\nexport const HeaderListItem = styled(ListItemText)({\r\n    '&:not(:first-child)': {\r\n        marginLeft: '30px',\r\n        fontSize: '24px',\r\n        whiteSpace: 'no-wrap',\r\n    },\r\n});\r\nexport const StyledLogoLink = styled(Link)({\r\n    textDecoration: 'none',\r\n    color: 'white',\r\n});\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport {\r\n    HeaderList,\r\n    HeaderListItem,\r\n    StyledHeader,\r\n    StyledLink,\r\n    StyledLogoLink,\r\n    Logo,\r\n    LogOutLink,\r\n} from './styled';\r\nimport { logOut } from '../../redux/actions/actionCreators';\r\n\r\nconst Header = ({ logAccess }) => {\r\n    const dispatch = useDispatch();\r\n    const logOutHandler = () => {\r\n        dispatch(logOut());\r\n    };\r\n\r\n    return (\r\n        <StyledHeader>\r\n            <Logo>\r\n                <StyledLogoLink to={'/'}>REACT TASK</StyledLogoLink>\r\n            </Logo>\r\n\r\n            <HeaderList>\r\n                <HeaderListItem>\r\n                    <StyledLink to={'/notes'}>my notes</StyledLink>\r\n                </HeaderListItem>\r\n                <HeaderListItem>\r\n                    <StyledLink to=\"/shared-notes\">shared notes</StyledLink>\r\n                </HeaderListItem>\r\n                <HeaderListItem>\r\n                    <StyledLink to=\"/about\">about</StyledLink>\r\n                </HeaderListItem>\r\n            </HeaderList>\r\n            {logAccess && (\r\n                <LogOutLink to=\"/\" onClick={logOutHandler}>\r\n                    log out\r\n                </LogOutLink>\r\n            )}\r\n        </StyledHeader>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    logAccess: PropTypes.bool,\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport Notes from '../myNotes/notes';\r\nconst SharedNotes = () => {\r\n    return (\r\n        <>\r\n            <Notes condition={true} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SharedNotes;\r\n","import { styled } from '@mui/styles';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Form } from 'formik';\r\nimport { TextField, Button } from '@mui/material';\r\n\r\nexport const SignForm = styled(Form)({\r\n    background: 'white',\r\n    width: '500px',\r\n    paddingLeft: '10%',\r\n    marginTop: '20px',\r\n    padding: '40px',\r\n    borderRadius: '5px',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'start',\r\n    '&&': {\r\n        padding: '20px 50px',\r\n    },\r\n});\r\n\r\nexport const SignUpForm = styled('div')({\r\n    marginTop: '10px',\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr 1fr',\r\n    gridTemplateRows: '1fr',\r\n    columnGap: '10px',\r\n    rowGap: '40px',\r\n});\r\nexport const SignInForm = styled('div')({\r\n    width: '100%',\r\n    marginTop: '10px',\r\n    display: 'grid',\r\n    gridTemplateColumns: '1fr ',\r\n    rowGap: '40px',\r\n});\r\nexport const StyledField = styled(TextField)({\r\n    padding: '5px',\r\n    width: '100%',\r\n    borderRadius: '5px',\r\n    border: '1px solid grey',\r\n    marginTop: '5px',\r\n});\r\n\r\nexport const ValidContainer = styled('div')({\r\n    position: 'relative',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n});\r\n\r\nexport const SignInButton = styled(Button)({\r\n    '&.MuiButton-root': {\r\n        marginTop: '50px',\r\n        width: '100%',\r\n        background: 'cornflowerblue',\r\n        fontWeight: 'bold',\r\n        color: 'white',\r\n        '&:hover': {\r\n            background: 'lightblue',\r\n        },\r\n    },\r\n});\r\n\r\nexport const StyledLink = styled(NavLink)({\r\n    textDecoration: 'none',\r\n    marginTop: '20px',\r\n    fontSize: '16px',\r\n    color: 'cadetBlue',\r\n    '&.active': {\r\n        color: 'deeppink',\r\n    },\r\n});\r\n\r\nexport const RegularText = styled('div')({\r\n    marginTop: '24px',\r\n});\r\n\r\nexport const StyledTitle = styled('h2')({\r\n    color: 'black',\r\n    textTransform: 'upperCase',\r\n});\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport { Field } from 'formik';\r\nimport { ValidContainer, StyledField } from './styled';\r\n\r\nconst ValidInput = ({ type, error, name, label, autoComplete }) => {\r\n    return (\r\n        <ValidContainer>\r\n            <Field\r\n                as={StyledField}\r\n                type={type}\r\n                name={name}\r\n                label={error || label}\r\n                error={!!error}\r\n                autoComplete={autoComplete}\r\n            />\r\n        </ValidContainer>\r\n    );\r\n};\r\n\r\nValidInput.propTypes = {\r\n    type: PropTypes.string,\r\n    error: PropTypes.string,\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    autoComplete: PropTypes.string,\r\n};\r\nexport default ValidInput;\r\n","export const todoList = [\r\n    {\r\n        id: 1,\r\n        title: 'delectus aut autem',\r\n        description: 'id labore ex et quam laborum',\r\n        date: new Date('3.08.2000').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 2,\r\n        title: 'quis ut nam facilis et officia qui',\r\n        description: 'quo vero reiciendis velit similique earum',\r\n        date: new Date('4.09.2010').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 3,\r\n        title: 'fugiat veniam minus',\r\n        description: 'odio adipisci rerum aut animi',\r\n        date: new Date('7.07.2008').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 4,\r\n        title: 'et porro tempora',\r\n        description: 'alias odio sit',\r\n        date: new Date('3.08.2025').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 5,\r\n        title: 'laboriosam mollitia et enim quasi',\r\n        description: 'vero eaque aliquid doloribus et culpa',\r\n        date: new Date('3.03.2012').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 6,\r\n        title: 'qui ullam ratione quibusdam ',\r\n        description: 'et fugit eligendi deleniti quidem qui sint nihil autem',\r\n        date: new Date('10.08.2007').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 7,\r\n        title: 'illo expedita consequatur quia in',\r\n        description: 'repellat consequatur praesentium vel minus molestias voluptatum',\r\n        date: new Date('3.12.2008').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 8,\r\n        title: 'quo adipisci enim quam ut ab',\r\n        description: 'provident id voluptas',\r\n        date: new Date('2.02.2019').toDateString(),\r\n        isShared: true,\r\n    },\r\n    {\r\n        id: 9,\r\n        title: 'React router 1',\r\n        description: 'buy fish',\r\n        date: new Date('2.02.2019').toDateString(),\r\n        isShared: false,\r\n    },\r\n    {\r\n        id: 10,\r\n        title: 'React router 2',\r\n        description: 'pbuy meet',\r\n        date: new Date('2.02.2019').toDateString(),\r\n        isShared: false,\r\n    },\r\n    {\r\n        id: 11,\r\n        title: 'React router 3',\r\n        description: 'buy milk',\r\n        date: new Date('2.02.2019').toDateString(),\r\n        isShared: false,\r\n    },\r\n];\r\n\r\nexport const serverPath = 'https://powerful-bastion-72531.herokuapp.com';\r\n","import axios from 'axios';\r\nimport { serverPath } from '../constants/noteList';\r\n\r\nexport const fetchUsers = () => {\r\n    return axios.get(`${serverPath}/users`);\r\n};\r\n\r\nexport const postMethod = (dataToPost) => {\r\n    axios.post(`${serverPath}/users`, dataToPost);\r\n};\r\n","import { useMutation } from 'react-query';\r\nimport { postMethod } from '../../services/userService';\r\n\r\nexport const useMutationDataServer = () => {\r\n    return useMutation((payload) => {\r\n        postMethod(payload);\r\n    });\r\n};\r\n","import { Formik } from 'formik';\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { getUserInfo } from '../../redux/actions/actionCreators';\r\nimport { initValuesForSignUp, ValidSchemeForSignUp } from '../../constants/validation';\r\nimport { SignUpForm, SignForm, SignInButton, StyledLink, StyledTitle } from './styled';\r\nimport ValidInput from './validInput';\r\nimport { useMutationDataServer } from '../../hooks/mutation/dataServerMutation';\r\n\r\nconst SignUp = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const mutation = useMutationDataServer();\r\n\r\n    const submitForm = async (values) => {\r\n        dispatch(getUserInfo(values));\r\n        await mutation.mutate(values);\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initValuesForSignUp}\r\n            validationSchema={ValidSchemeForSignUp}\r\n            onSubmit={submitForm}\r\n        >\r\n            {({ errors }) => (\r\n                <SignForm>\r\n                    <StyledTitle>sign up</StyledTitle>\r\n                    <SignUpForm>\r\n                        <ValidInput\r\n                            name=\"firstName\"\r\n                            label=\"Enter first name\"\r\n                            error={errors.firstName}\r\n                            type=\"text\"\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <ValidInput\r\n                            name=\"lastName\"\r\n                            label=\"Enter last name\"\r\n                            error={errors.lastName}\r\n                            type=\"text\"\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <ValidInput\r\n                            name=\"dateOfBirth\"\r\n                            error={errors.dateOfBirth}\r\n                            type=\"date\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <ValidInput\r\n                            name=\"email\"\r\n                            label=\"Enter email\"\r\n                            error={errors.email}\r\n                            type=\"email\"\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <ValidInput\r\n                            name=\"password\"\r\n                            label=\"Enter password\"\r\n                            error={errors.password}\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        <ValidInput\r\n                            name=\"confirmPassword\"\r\n                            label=\"Confirm password\"\r\n                            error={errors.confirmPassword}\r\n                            type=\"password\"\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </SignUpForm>\r\n                    <SignInButton type=\"submit\">Sign up</SignInButton>\r\n                    <StyledLink to=\"/\">←Back to sign in page</StyledLink>\r\n                </SignForm>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default SignUp;\r\n","import { styled } from '@mui/styles';\r\n\r\nexport const PageTitle = styled('h2')({\r\n    fontSize: '36px',\r\n    fontWeight: 'Bold',\r\n    color: 'ghostwhite',\r\n    textAlign: 'center',\r\n    marginTop: '20px',\r\n    textTransform: 'uppercase',\r\n    '&.dark': {\r\n        color: 'black',\r\n        marginTop: '0',\r\n    },\r\n});\r\n","import { styled } from '@mui/styles';\r\nimport { Container } from '@mui/material';\r\n\r\nexport const SharedBox = styled(Container)({\r\n    '&.MuiContainer-root': {\r\n        maxWidth: '100%',\r\n        width: '700px',\r\n        backgroundColor: 'white',\r\n        padding: '20px',\r\n        borderRadius: '5px',\r\n        marginTop: '50px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n});\r\n","import React from 'react';\r\n\r\nimport Box from '@mui/material/Box';\r\nimport { List, ListItemText } from '@mui/material';\r\n\r\nimport { PageTitle } from '../sharedNotes/styled';\r\nimport { SharedBox } from './styled';\r\n\r\nconst About = () => {\r\n    return (\r\n        <SharedBox>\r\n            <PageTitle className=\"dark\">About</PageTitle>\r\n            <Box>\r\n                <h3>React task 3</h3>\r\n                <p>\r\n                    Main menu with few tabs must be created. Clicking each tab directs a user to a\r\n                    new page. If URL does not exist, a user will be redirected to the Error page.\r\n                </p>\r\n                <List>\r\n                    <h3>Requirement</h3>\r\n                    <ListItemText>Follow requirement of first task</ListItemText>\r\n                    <ListItemText>My Notes page includes list of personal notes</ListItemText>\r\n                    <ListItemText>Shared Notes page includes List of shared Notes</ListItemText>\r\n                    <ListItemText>Otherwise it must be redirected to error page</ListItemText>\r\n                </List>\r\n            </Box>\r\n        </SharedBox>\r\n    );\r\n};\r\n\r\nexport default About;\r\n","import { styled } from '@mui/styles';\r\nimport { StyledLink } from '../header/styled';\r\n\r\nexport const ErrorBox = styled('div')({\r\n    background: 'white',\r\n    padding: '20px',\r\n    display: 'flex',\r\n    borderRadius: '5px',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    marginTop: '50px',\r\n});\r\n\r\nexport const Title = styled('h2')({\r\n    fontSize: '72px',\r\n    color: 'darkgrey',\r\n});\r\n\r\nexport const ErrorText = styled('p')({\r\n    fontSize: '56px',\r\n    color: 'darkgrey',\r\n});\r\n\r\nexport const ErrorBack = styled(StyledLink)({\r\n    color: 'cornflowerblue',\r\n    borderRadius: '100%',\r\n    flexShrink: '0',\r\n    background: '#F8F8FF',\r\n    padding: '5px 10px',\r\n    fontSize: '100px',\r\n    border: '1px solid cornflowerblue',\r\n    marginTop: '40px',\r\n    \"&:hover\":{\r\n        background: 'grey',\r\n        color: 'white'\r\n    }\r\n});\r\n","export default __webpack_public_path__ + \"static/media/not-found.a5f8bbce.jpg\";","import React from 'react';\r\n\r\nimport { ErrorBack, ErrorBox, ErrorText, Title } from './styled';\r\nimport notFound from '../../images/not-found.jpg';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <ErrorBox>\r\n            <Title data-id='1'>404</Title>\r\n            <ErrorText>Page not found. Please enter correct Url</ErrorText>\r\n            <img src={notFound} alt=\"not-found\" />\r\n            <ErrorBack to=\"/\">←</ErrorBack>\r\n        </ErrorBox>\r\n    );\r\n};\r\n\r\nexport default NotFound;\r\n","import { useQuery } from 'react-query';\r\nimport { fetchUsers } from '../../services/userService';\r\n\r\nconst FETCH_USERS_DATA = 'FETCH_USERS_DATA';\r\nexport const useUsers = (config = {}) => {\r\n    const response = useQuery(\r\n        FETCH_USERS_DATA,\r\n        async () => {\r\n            const response = await fetchUsers();\r\n            return response?.data;\r\n        },\r\n        {\r\n            cacheTime: 0,\r\n            refetchOnWindowFocus: false,\r\n            refetchOnMount: false,\r\n            ...config,\r\n        }\r\n    );\r\n    return response;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Formik } from 'formik';\r\n\r\nimport { RegularText, SignForm, SignInButton, StyledLink, StyledTitle, SignInForm } from './styled';\r\n\r\nimport { getUserInfo } from '../../redux/actions/actionCreators';\r\nimport { initValuesForLogIn, ValidSchemeForLogIn } from '../../constants/validation';\r\nimport { useUsers } from '../../hooks/query/loginQuery';\r\nimport ValidInput from './validInput';\r\n\r\nconst SignIn = () => {\r\n    const [userCredentials, setUserCredentials] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    const { data: users } = useUsers({\r\n        enabled: userCredentials.length,\r\n    });\r\n\r\n    const singInHandler = ({ email, password }) => {\r\n        const currentUser = users.find(\r\n            (dataElement) => dataElement.email == email && dataElement.password == password\r\n        );\r\n        if (currentUser) {\r\n            dispatch(getUserInfo(currentUser));\r\n        }\r\n        setUserCredentials({});\r\n        return !!currentUser;\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={initValuesForLogIn}\r\n            validationSchema={ValidSchemeForLogIn}\r\n            onSubmit={(values) => {\r\n                setUserCredentials({ email: values.email, password: values.password });\r\n                const isCredentialsCorrect = singInHandler(values);\r\n                if (!isCredentialsCorrect) {\r\n                    alert('wrong email or password. Try again or sign up');\r\n                }\r\n            }}\r\n        >\r\n            {({ errors }) => (\r\n                <SignForm>\r\n                    <StyledTitle>sign in</StyledTitle>\r\n                    <SignInForm>\r\n                        <ValidInput\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            label=\"Enter email\"\r\n                            error={errors.email}\r\n                            autoComplete=\"on\"\r\n                        />\r\n                        <ValidInput\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            label=\"Enter password\"\r\n                            error={errors.password}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                    </SignInForm>\r\n\r\n                    <SignInButton type=\"submit\">Sign In</SignInButton>\r\n                    <RegularText>\r\n                        If you do not sign up, follow <StyledLink to=\"/signUp\">here</StyledLink>{' '}\r\n                    </RegularText>\r\n                </SignForm>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default SignIn;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Routes, Route, Navigate, useNavigate, useLocation } from 'react-router-dom';\r\nimport { store } from './redux/store';\r\n\r\nimport Notes from './pages/myNotes/notes';\r\nimport Header from './pages/header/header';\r\nimport SharedNotes from './pages/sharedNotes/SharedNotes';\r\nimport SignUp from './pages/signIn/signUp';\r\nimport About from './pages/about/About';\r\nimport NotFound from './pages/notFound/notFound';\r\nimport SignIn from './pages/signIn/SignIn';\r\nimport { getAccess } from './selectors/selectors';\r\n\r\nfunction App() {\r\n    const location = useLocation();\r\n    const navigate = useNavigate();\r\n    const [hasAccess, setHasAccess] = useState(false);\r\n    store.subscribe(() => setHasAccess(getAccess));\r\n    useEffect(() => {\r\n        setHasAccess(getAccess);\r\n        navigate(location.pathname);\r\n    }, []);\r\n    return (\r\n        <div className=\"app\">\r\n            <Header logAccess={hasAccess} />\r\n            <Routes>\r\n                <Route path=\"/signUp\" element={hasAccess ? <Navigate to=\"/notes\" /> : <SignUp />} />\r\n                <Route\r\n                    path=\"/notes\"\r\n                    element={hasAccess ? <Notes /> : <Navigate to=\"/not-found\" />}\r\n                />\r\n                <Route path=\"/signIn\" element={hasAccess ? <Navigate to=\"/notes\" /> : <SignIn />} />\r\n                <Route\r\n                    path=\"/shared-notes\"\r\n                    element={hasAccess ? <SharedNotes /> : <Navigate to=\"/not-found\" />}\r\n                />\r\n                <Route\r\n                    path=\"/\"\r\n                    element={hasAccess ? <Navigate to=\"/notes\" /> : <Navigate to=\"/signIn\" />}\r\n                />\r\n                <Route path=\"/about\" element={<About />} />\r\n                <Route path=\"/not-found\" element={<NotFound />} />\r\n                <Route path=\"/*\" element={<Navigate to=\"/not-found\" />} />\r\n            </Routes>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store';\r\nimport { QueryClient, QueryClientProvider } from 'react-query';\r\n\r\nimport './style/normalize.scss';\r\nimport App from './App.jsx';\r\n\r\nconst queryClient = new QueryClient();\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <QueryClientProvider client={queryClient}>\r\n            <HashRouter>\r\n                <App />\r\n            </HashRouter>\r\n        </QueryClientProvider>\r\n    </Provider>,\r\n\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}